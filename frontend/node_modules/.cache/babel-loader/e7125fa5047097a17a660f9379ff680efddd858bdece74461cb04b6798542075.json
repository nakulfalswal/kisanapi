{"ast":null,"code":"var _jsxFileName = \"C:\\\\kisan_Api\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { LanguageProvider } from './contexts/LanguageContext';\nimport Header from './components/Header';\nimport InputForm from './components/InputForm';\nimport Results from './components/Results';\nimport Footer from './components/Footer';\nimport KnowledgeSidebar from './components/KnowledgeSidebar';\nimport Chatbot from './components/Chatbot';\nimport LanguageSelector from './components/LanguageSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handlePrediction = async formData => {\n    setLoading(true);\n    setError(null);\n    setResults(null);\n    try {\n      const response = await fetch('/api/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get prediction');\n      }\n      setResults(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleReset = () => {\n    setResults(null);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(KnowledgeSidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-section\",\n              children: /*#__PURE__*/_jsxDEV(InputForm, {\n                onPrediction: handlePrediction,\n                loading: loading,\n                onReset: handleReset\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"results-section\",\n              children: /*#__PURE__*/_jsxDEV(Results, {\n                results: results,\n                loading: loading,\n                error: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chatbot, {\n        onRecommendation: handlePrediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZmRUXqClUtrbxAfkxEtIp+EV8Tw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LanguageProvider","Header","InputForm","Results","Footer","KnowledgeSidebar","Chatbot","LanguageSelector","jsxDEV","_jsxDEV","App","_s","results","setResults","loading","setLoading","error","setError","handlePrediction","formData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","err","message","handleReset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onPrediction","onReset","onRecommendation","_c","$RefreshReg$"],"sources":["C:/kisan_Api/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { LanguageProvider } from './contexts/LanguageContext';\nimport Header from './components/Header';\nimport InputForm from './components/InputForm';\nimport Results from './components/Results';\nimport Footer from './components/Footer';\nimport KnowledgeSidebar from './components/KnowledgeSidebar';\nimport Chatbot from './components/Chatbot';\nimport LanguageSelector from './components/LanguageSelector';\n\nfunction App() {\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handlePrediction = async (formData) => {\n    setLoading(true);\n    setError(null);\n    setResults(null);\n\n    try {\n      const response = await fetch('/api/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to get prediction');\n      }\n\n      setResults(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReset = () => {\n    setResults(null);\n    setError(null);\n  };\n\n  return (\n    <LanguageProvider>\n      <div className=\"App\">\n        <KnowledgeSidebar />\n        <Header />\n        <main className=\"main-content\">\n          <div className=\"container\">\n            <div className=\"content-wrapper\">\n              <div className=\"form-section\">\n                <InputForm \n                  onPrediction={handlePrediction} \n                  loading={loading}\n                  onReset={handleReset}\n                />\n              </div>\n              <div className=\"results-section\">\n                <Results \n                  results={results} \n                  loading={loading} \n                  error={error}\n                />\n              </div>\n            </div>\n          </div>\n        </main>\n        <Footer />\n        <Chatbot onRecommendation={handlePrediction} />\n      </div>\n    </LanguageProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}