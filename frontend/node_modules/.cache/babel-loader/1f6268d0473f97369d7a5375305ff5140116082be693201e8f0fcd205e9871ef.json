{"ast":null,"code":"var _jsxFileName = \"C:\\\\kisan_Api\\\\frontend\\\\src\\\\pages\\\\CropDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Droplets, Sun, AlertTriangle, CheckCircle, TrendingUp, Leaf, Zap, Clock, MapPin, ArrowLeft, Settings } from 'lucide-react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { translations } from '../translations/translations';\nimport './CropDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropDashboard = ({\n  onBack\n}) => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const t = translations[language] || translations.en;\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [crops, setCrops] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [newCrop, setNewCrop] = useState({\n    name: '',\n    plantingDate: '',\n    expectedHarvest: '',\n    waterRequirement: '',\n    fertilizerType: '',\n    notes: ''\n  });\n\n  // Load user's crop data and generate smart alerts\n  useEffect(() => {\n    // Load user's crop data from localStorage (hardcoded for now)\n    const savedCrops = localStorage.getItem('userCrops');\n    if (savedCrops) {\n      setCrops(JSON.parse(savedCrops));\n    } else {\n      // Default crops for demo\n      const defaultCrops = [{\n        id: 1,\n        name: 'Rice',\n        plantingDate: '2024-01-15',\n        expectedHarvest: '2024-04-15',\n        waterRequirement: 'High',\n        fertilizerType: 'NPK 20-20-20',\n        status: 'Growing',\n        health: 'Good',\n        soilData: {\n          N: 80,\n          P: 40,\n          K: 40,\n          temperature: 25,\n          humidity: 80,\n          ph: 6.5,\n          rainfall: 200\n        }\n      }, {\n        id: 2,\n        name: 'Tomato',\n        plantingDate: '2024-02-01',\n        expectedHarvest: '2024-05-01',\n        waterRequirement: 'Medium',\n        fertilizerType: 'Organic Compost',\n        status: 'Flowering',\n        health: 'Excellent',\n        soilData: {\n          N: 60,\n          P: 30,\n          K: 30,\n          temperature: 28,\n          humidity: 60,\n          ph: 6.0,\n          rainfall: 150\n        }\n      }];\n      setCrops(defaultCrops);\n      localStorage.setItem('userCrops', JSON.stringify(defaultCrops));\n    }\n\n    // Generate smart alerts based on crop data\n    generateSmartAlerts();\n  }, []);\n  const generateSmartAlerts = async () => {\n    const alerts = [];\n\n    // Check each crop for potential issues\n    for (const crop of crops) {\n      if (crop.soilData) {\n        try {\n          // Get ML recommendation for this crop's soil data\n          const response = await fetch('/api/predict', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(crop.soilData)\n          });\n          const data = await response.json();\n          if (data.success) {\n            var _data$prediction$top_;\n            const recommendedCrop = data.prediction.recommended_crop;\n            const confidence = ((_data$prediction$top_ = data.prediction.top_predictions[0]) === null || _data$prediction$top_ === void 0 ? void 0 : _data$prediction$top_.probability) || 0;\n\n            // Check if current crop matches recommendation\n            if (recommendedCrop.toLowerCase() !== crop.name.toLowerCase()) {\n              alerts.push({\n                id: Date.now() + Math.random(),\n                type: 'warning',\n                title: 'Crop Mismatch Alert',\n                message: `Your ${crop.name} may not be suitable for current soil conditions. ML recommends ${recommendedCrop} (${confidence}% confidence).`,\n                date: new Date().toISOString().split('T')[0],\n                priority: confidence > 70 ? 'high' : 'medium'\n              });\n            } else if (confidence < 60) {\n              alerts.push({\n                id: Date.now() + Math.random(),\n                type: 'info',\n                title: 'Low Confidence Alert',\n                message: `Your ${crop.name} has low suitability (${confidence}%). Consider soil improvement.`,\n                date: new Date().toISOString().split('T')[0],\n                priority: 'medium'\n              });\n            }\n          }\n        } catch (error) {\n          console.error('Error generating alert for crop:', crop.name, error);\n        }\n      }\n    }\n\n    // Add general farming alerts\n    alerts.push({\n      id: Date.now() + Math.random(),\n      type: 'info',\n      title: 'Fertilizer Reminder',\n      message: 'Time to check soil nutrients and apply appropriate fertilizers.',\n      date: new Date().toISOString().split('T')[0],\n      priority: 'medium'\n    });\n    setAlerts(alerts);\n  };\n  const addCrop = async () => {\n    if (newCrop.name && newCrop.plantingDate) {\n      // Get ML recommendation for the new crop\n      let soilData = null;\n      let mlRecommendation = null;\n      try {\n        // Use default soil parameters for new crop (user can update later)\n        const defaultSoilData = {\n          N: 60,\n          P: 30,\n          K: 30,\n          temperature: 25,\n          humidity: 60,\n          ph: 6.5,\n          rainfall: 150\n        };\n        const response = await fetch('/api/predict', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(defaultSoilData)\n        });\n        const data = await response.json();\n        if (data.success) {\n          mlRecommendation = data.prediction;\n          soilData = defaultSoilData;\n        }\n      } catch (error) {\n        console.error('Error getting ML recommendation:', error);\n      }\n      const crop = {\n        id: Date.now(),\n        ...newCrop,\n        status: 'Planted',\n        health: 'Good',\n        soilData: soilData,\n        mlRecommendation: mlRecommendation\n      };\n      const updatedCrops = [...crops, crop];\n      setCrops(updatedCrops);\n      localStorage.setItem('userCrops', JSON.stringify(updatedCrops));\n      setNewCrop({\n        name: '',\n        plantingDate: '',\n        expectedHarvest: '',\n        waterRequirement: '',\n        fertilizerType: '',\n        notes: ''\n      });\n\n      // Regenerate alerts with new crop\n      generateSmartAlerts();\n    }\n  };\n  const getAlertIcon = type => {\n    switch (type) {\n      case 'warning':\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"alert-icon warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 30\n        }, this);\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"alert-icon success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 30\n        }, this);\n      case 'info':\n        return /*#__PURE__*/_jsxDEV(TrendingUp, {\n          className: \"alert-icon info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"alert-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getHealthColor = health => {\n    switch (health) {\n      case 'Excellent':\n        return '#4CAF50';\n      case 'Good':\n        return '#8BC34A';\n      case 'Fair':\n        return '#FFC107';\n      case 'Poor':\n        return '#FF5722';\n      default:\n        return '#9E9E9E';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crop-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onBack,\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), \"Back to Main\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-title\",\n        children: [/*#__PURE__*/_jsxDEV(Leaf, {\n          size: 28\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Crop Management Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-button\",\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'dashboard' ? 'active' : ''}`,\n        onClick: () => setActiveTab('dashboard'),\n        children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), \"Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'crops' ? 'active' : ''}`,\n        onClick: () => setActiveTab('crops'),\n        children: [/*#__PURE__*/_jsxDEV(Leaf, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), \"My Crops\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'alerts' ? 'active' : ''}`,\n        onClick: () => setActiveTab('alerts'),\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), \"Alerts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(Leaf, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: crops.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Active Crops\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(AlertTriangle, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: alerts.filter(a => a.priority === 'high').length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"High Priority Alerts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(Droplets, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"85%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Water Efficiency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(Sun, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Good\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Weather Condition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recent-activity\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Recent Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-list\",\n            children: alerts.slice(0, 3).map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-item\",\n              children: [getAlertIcon(alert.type), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: alert.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"activity-date\",\n                  children: alert.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this)]\n            }, alert.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), activeTab === 'crops' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crops-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-crop-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Crop Name\",\n              value: newCrop.name,\n              onChange: e => setNewCrop({\n                ...newCrop,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newCrop.plantingDate,\n              onChange: e => setNewCrop({\n                ...newCrop,\n                plantingDate: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              placeholder: \"Expected Harvest\",\n              value: newCrop.expectedHarvest,\n              onChange: e => setNewCrop({\n                ...newCrop,\n                expectedHarvest: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newCrop.waterRequirement,\n              onChange: e => setNewCrop({\n                ...newCrop,\n                waterRequirement: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Water Requirement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Low\",\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Medium\",\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"High\",\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Fertilizer Type\",\n              value: newCrop.fertilizerType,\n              onChange: e => setNewCrop({\n                ...newCrop,\n                fertilizerType: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Notes\",\n              value: newCrop.notes,\n              onChange: e => setNewCrop({\n                ...newCrop,\n                notes: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-button\",\n            onClick: addCrop,\n            children: \"Add Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crops-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My Crops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), crops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crop-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crop-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: crop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"crop-status\",\n                style: {\n                  color: getHealthColor(crop.health)\n                },\n                children: crop.health\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crop-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Planted: \", crop.plantingDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Harvest: \", crop.expectedHarvest]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(Droplets, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Water: \", crop.waterRequirement]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(Zap, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Fertilizer: \", crop.fertilizerType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this), crop.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crop-notes\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: crop.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 21\n            }, this)]\n          }, crop.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), activeTab === 'alerts' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alerts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Farming Alerts & Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alerts-list\",\n          children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert-item ${alert.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-icon-container\",\n              children: getAlertIcon(alert.type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: alert.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `priority ${alert.priority}`,\n                  children: alert.priority.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: alert.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"alert-date\",\n                  children: alert.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mark-read\",\n                  children: \"Mark as Read\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this)]\n          }, alert.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(CropDashboard, \"Ys9IdFibELIBJIMOX0Z0d4587+k=\", false, function () {\n  return [useLanguage];\n});\n_c = CropDashboard;\nexport default CropDashboard;\nvar _c;\n$RefreshReg$(_c, \"CropDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Droplets","Sun","AlertTriangle","CheckCircle","TrendingUp","Leaf","Zap","Clock","MapPin","ArrowLeft","Settings","useLanguage","translations","jsxDEV","_jsxDEV","CropDashboard","onBack","_s","language","t","en","activeTab","setActiveTab","crops","setCrops","alerts","setAlerts","newCrop","setNewCrop","name","plantingDate","expectedHarvest","waterRequirement","fertilizerType","notes","savedCrops","localStorage","getItem","JSON","parse","defaultCrops","id","status","health","soilData","N","P","K","temperature","humidity","ph","rainfall","setItem","stringify","generateSmartAlerts","crop","response","fetch","method","headers","body","data","json","success","_data$prediction$top_","recommendedCrop","prediction","recommended_crop","confidence","top_predictions","probability","toLowerCase","push","Date","now","Math","random","type","title","message","date","toISOString","split","priority","error","console","addCrop","mlRecommendation","defaultSoilData","updatedCrops","getAlertIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getHealthColor","children","onClick","size","length","filter","a","slice","map","alert","placeholder","value","onChange","e","target","style","color","toUpperCase","_c","$RefreshReg$"],"sources":["C:/kisan_Api/frontend/src/pages/CropDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Calendar, \r\n  Droplets, \r\n  Sun, \r\n  AlertTriangle, \r\n  CheckCircle, \r\n  TrendingUp,\r\n  Leaf,\r\n  Zap,\r\n  Clock,\r\n  MapPin,\r\n  ArrowLeft,\r\n  Settings\r\n} from 'lucide-react';\r\nimport { useLanguage } from '../contexts/LanguageContext';\r\nimport { translations } from '../translations/translations';\r\nimport './CropDashboard.css';\r\n\r\nconst CropDashboard = ({ onBack }) => {\r\n  const { language } = useLanguage();\r\n  const t = translations[language] || translations.en;\r\n  \r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n  const [crops, setCrops] = useState([]);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [newCrop, setNewCrop] = useState({\r\n    name: '',\r\n    plantingDate: '',\r\n    expectedHarvest: '',\r\n    waterRequirement: '',\r\n    fertilizerType: '',\r\n    notes: ''\r\n  });\r\n\r\n  // Load user's crop data and generate smart alerts\r\n  useEffect(() => {\r\n    // Load user's crop data from localStorage (hardcoded for now)\r\n    const savedCrops = localStorage.getItem('userCrops');\r\n    if (savedCrops) {\r\n      setCrops(JSON.parse(savedCrops));\r\n    } else {\r\n      // Default crops for demo\r\n      const defaultCrops = [\r\n        {\r\n          id: 1,\r\n          name: 'Rice',\r\n          plantingDate: '2024-01-15',\r\n          expectedHarvest: '2024-04-15',\r\n          waterRequirement: 'High',\r\n          fertilizerType: 'NPK 20-20-20',\r\n          status: 'Growing',\r\n          health: 'Good',\r\n          soilData: { N: 80, P: 40, K: 40, temperature: 25, humidity: 80, ph: 6.5, rainfall: 200 }\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Tomato',\r\n          plantingDate: '2024-02-01',\r\n          expectedHarvest: '2024-05-01',\r\n          waterRequirement: 'Medium',\r\n          fertilizerType: 'Organic Compost',\r\n          status: 'Flowering',\r\n          health: 'Excellent',\r\n          soilData: { N: 60, P: 30, K: 30, temperature: 28, humidity: 60, ph: 6.0, rainfall: 150 }\r\n        }\r\n      ];\r\n      setCrops(defaultCrops);\r\n      localStorage.setItem('userCrops', JSON.stringify(defaultCrops));\r\n    }\r\n\r\n    // Generate smart alerts based on crop data\r\n    generateSmartAlerts();\r\n  }, []);\r\n\r\n  const generateSmartAlerts = async () => {\r\n    const alerts = [];\r\n    \r\n    // Check each crop for potential issues\r\n    for (const crop of crops) {\r\n      if (crop.soilData) {\r\n        try {\r\n          // Get ML recommendation for this crop's soil data\r\n          const response = await fetch('/api/predict', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(crop.soilData)\r\n          });\r\n          \r\n          const data = await response.json();\r\n          \r\n          if (data.success) {\r\n            const recommendedCrop = data.prediction.recommended_crop;\r\n            const confidence = data.prediction.top_predictions[0]?.probability || 0;\r\n            \r\n            // Check if current crop matches recommendation\r\n            if (recommendedCrop.toLowerCase() !== crop.name.toLowerCase()) {\r\n              alerts.push({\r\n                id: Date.now() + Math.random(),\r\n                type: 'warning',\r\n                title: 'Crop Mismatch Alert',\r\n                message: `Your ${crop.name} may not be suitable for current soil conditions. ML recommends ${recommendedCrop} (${confidence}% confidence).`,\r\n                date: new Date().toISOString().split('T')[0],\r\n                priority: confidence > 70 ? 'high' : 'medium'\r\n              });\r\n            } else if (confidence < 60) {\r\n              alerts.push({\r\n                id: Date.now() + Math.random(),\r\n                type: 'info',\r\n                title: 'Low Confidence Alert',\r\n                message: `Your ${crop.name} has low suitability (${confidence}%). Consider soil improvement.`,\r\n                date: new Date().toISOString().split('T')[0],\r\n                priority: 'medium'\r\n              });\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error generating alert for crop:', crop.name, error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Add general farming alerts\r\n    alerts.push({\r\n      id: Date.now() + Math.random(),\r\n      type: 'info',\r\n      title: 'Fertilizer Reminder',\r\n      message: 'Time to check soil nutrients and apply appropriate fertilizers.',\r\n      date: new Date().toISOString().split('T')[0],\r\n      priority: 'medium'\r\n    });\r\n    \r\n    setAlerts(alerts);\r\n  };\r\n\r\n  const addCrop = async () => {\r\n    if (newCrop.name && newCrop.plantingDate) {\r\n      // Get ML recommendation for the new crop\r\n      let soilData = null;\r\n      let mlRecommendation = null;\r\n      \r\n      try {\r\n        // Use default soil parameters for new crop (user can update later)\r\n        const defaultSoilData = {\r\n          N: 60, P: 30, K: 30, temperature: 25, humidity: 60, ph: 6.5, rainfall: 150\r\n        };\r\n        \r\n        const response = await fetch('/api/predict', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(defaultSoilData)\r\n        });\r\n        \r\n        const data = await response.json();\r\n        if (data.success) {\r\n          mlRecommendation = data.prediction;\r\n          soilData = defaultSoilData;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting ML recommendation:', error);\r\n      }\r\n      \r\n      const crop = {\r\n        id: Date.now(),\r\n        ...newCrop,\r\n        status: 'Planted',\r\n        health: 'Good',\r\n        soilData: soilData,\r\n        mlRecommendation: mlRecommendation\r\n      };\r\n      \r\n      const updatedCrops = [...crops, crop];\r\n      setCrops(updatedCrops);\r\n      localStorage.setItem('userCrops', JSON.stringify(updatedCrops));\r\n      \r\n      setNewCrop({\r\n        name: '',\r\n        plantingDate: '',\r\n        expectedHarvest: '',\r\n        waterRequirement: '',\r\n        fertilizerType: '',\r\n        notes: ''\r\n      });\r\n      \r\n      // Regenerate alerts with new crop\r\n      generateSmartAlerts();\r\n    }\r\n  };\r\n\r\n  const getAlertIcon = (type) => {\r\n    switch (type) {\r\n      case 'warning': return <AlertTriangle className=\"alert-icon warning\" />;\r\n      case 'success': return <CheckCircle className=\"alert-icon success\" />;\r\n      case 'info': return <TrendingUp className=\"alert-icon info\" />;\r\n      default: return <Clock className=\"alert-icon\" />;\r\n    }\r\n  };\r\n\r\n  const getHealthColor = (health) => {\r\n    switch (health) {\r\n      case 'Excellent': return '#4CAF50';\r\n      case 'Good': return '#8BC34A';\r\n      case 'Fair': return '#FFC107';\r\n      case 'Poor': return '#FF5722';\r\n      default: return '#9E9E9E';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"crop-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <button className=\"back-button\" onClick={onBack}>\r\n          <ArrowLeft size={20} />\r\n          Back to Main\r\n        </button>\r\n        <div className=\"dashboard-title\">\r\n          <Leaf size={28} />\r\n          <h1>Crop Management Dashboard</h1>\r\n        </div>\r\n        <div className=\"dashboard-actions\">\r\n          <button className=\"settings-button\">\r\n            <Settings size={20} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-tabs\">\r\n        <button \r\n          className={`tab ${activeTab === 'dashboard' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('dashboard')}\r\n        >\r\n          <TrendingUp size={16} />\r\n          Dashboard\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'crops' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('crops')}\r\n        >\r\n          <Leaf size={16} />\r\n          My Crops\r\n        </button>\r\n        <button \r\n          className={`tab ${activeTab === 'alerts' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('alerts')}\r\n        >\r\n          <AlertTriangle size={16} />\r\n          Alerts\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        {activeTab === 'dashboard' && (\r\n          <div className=\"dashboard\">\r\n            <div className=\"stats-grid\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\">\r\n                  <Leaf size={24} />\r\n                </div>\r\n                <div className=\"stat-info\">\r\n                  <h3>{crops.length}</h3>\r\n                  <p>Active Crops</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\">\r\n                  <AlertTriangle size={24} />\r\n                </div>\r\n                <div className=\"stat-info\">\r\n                  <h3>{alerts.filter(a => a.priority === 'high').length}</h3>\r\n                  <p>High Priority Alerts</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\">\r\n                  <Droplets size={24} />\r\n                </div>\r\n                <div className=\"stat-info\">\r\n                  <h3>85%</h3>\r\n                  <p>Water Efficiency</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\">\r\n                  <Sun size={24} />\r\n                </div>\r\n                <div className=\"stat-info\">\r\n                  <h3>Good</h3>\r\n                  <p>Weather Condition</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"recent-activity\">\r\n              <h3>Recent Activity</h3>\r\n              <div className=\"activity-list\">\r\n                {alerts.slice(0, 3).map(alert => (\r\n                  <div key={alert.id} className=\"activity-item\">\r\n                    {getAlertIcon(alert.type)}\r\n                    <div className=\"activity-content\">\r\n                      <p>{alert.title}</p>\r\n                      <span className=\"activity-date\">{alert.date}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'crops' && (\r\n          <div className=\"crops-section\">\r\n            <div className=\"add-crop-form\">\r\n              <h3>Add New Crop</h3>\r\n              <div className=\"form-grid\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Crop Name\"\r\n                  value={newCrop.name}\r\n                  onChange={(e) => setNewCrop({...newCrop, name: e.target.value})}\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  value={newCrop.plantingDate}\r\n                  onChange={(e) => setNewCrop({...newCrop, plantingDate: e.target.value})}\r\n                />\r\n                <input\r\n                  type=\"date\"\r\n                  placeholder=\"Expected Harvest\"\r\n                  value={newCrop.expectedHarvest}\r\n                  onChange={(e) => setNewCrop({...newCrop, expectedHarvest: e.target.value})}\r\n                />\r\n                <select\r\n                  value={newCrop.waterRequirement}\r\n                  onChange={(e) => setNewCrop({...newCrop, waterRequirement: e.target.value})}\r\n                >\r\n                  <option value=\"\">Water Requirement</option>\r\n                  <option value=\"Low\">Low</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"High\">High</option>\r\n                </select>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Fertilizer Type\"\r\n                  value={newCrop.fertilizerType}\r\n                  onChange={(e) => setNewCrop({...newCrop, fertilizerType: e.target.value})}\r\n                />\r\n                <textarea\r\n                  placeholder=\"Notes\"\r\n                  value={newCrop.notes}\r\n                  onChange={(e) => setNewCrop({...newCrop, notes: e.target.value})}\r\n                />\r\n              </div>\r\n              <button className=\"add-button\" onClick={addCrop}>\r\n                Add Crop\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"crops-list\">\r\n              <h3>My Crops</h3>\r\n              {crops.map(crop => (\r\n                <div key={crop.id} className=\"crop-card\">\r\n                  <div className=\"crop-header\">\r\n                    <h4>{crop.name}</h4>\r\n                    <div className=\"crop-status\" style={{color: getHealthColor(crop.health)}}>\r\n                      {crop.health}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"crop-details\">\r\n                    <div className=\"detail-item\">\r\n                      <Calendar size={16} />\r\n                      <span>Planted: {crop.plantingDate}</span>\r\n                    </div>\r\n                    <div className=\"detail-item\">\r\n                      <Clock size={16} />\r\n                      <span>Harvest: {crop.expectedHarvest}</span>\r\n                    </div>\r\n                    <div className=\"detail-item\">\r\n                      <Droplets size={16} />\r\n                      <span>Water: {crop.waterRequirement}</span>\r\n                    </div>\r\n                    <div className=\"detail-item\">\r\n                      <Zap size={16} />\r\n                      <span>Fertilizer: {crop.fertilizerType}</span>\r\n                    </div>\r\n                  </div>\r\n                  {crop.notes && (\r\n                    <div className=\"crop-notes\">\r\n                      <p>{crop.notes}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'alerts' && (\r\n          <div className=\"alerts-section\">\r\n            <h3>Farming Alerts & Notifications</h3>\r\n            <div className=\"alerts-list\">\r\n              {alerts.map(alert => (\r\n                <div key={alert.id} className={`alert-item ${alert.type}`}>\r\n                  <div className=\"alert-icon-container\">\r\n                    {getAlertIcon(alert.type)}\r\n                  </div>\r\n                  <div className=\"alert-content\">\r\n                    <div className=\"alert-header\">\r\n                      <h4>{alert.title}</h4>\r\n                      <span className={`priority ${alert.priority}`}>\r\n                        {alert.priority.toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    <p>{alert.message}</p>\r\n                    <div className=\"alert-footer\">\r\n                      <span className=\"alert-date\">{alert.date}</span>\r\n                      <button className=\"mark-read\">Mark as Read</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}