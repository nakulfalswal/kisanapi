{"ast":null,"code":"var _jsxFileName = \"C:\\\\kisan_Api\\\\frontend\\\\src\\\\components\\\\CropManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Droplets, Sun, AlertTriangle, CheckCircle, TrendingUp, Leaf, Zap, Clock, MapPin } from 'lucide-react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { translations } from '../translations/translations';\nimport './CropManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropManagement = ({\n  isOpen,\n  onClose,\n  userData\n}) => {\n  _s();\n  const {\n    language\n  } = useLanguage();\n  const t = translations[language] || translations.en;\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [crops, setCrops] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const [newCrop, setNewCrop] = useState({\n    name: '',\n    plantingDate: '',\n    expectedHarvest: '',\n    waterRequirement: '',\n    fertilizerType: '',\n    notes: ''\n  });\n\n  // Load user's crop data and generate smart alerts\n  useEffect(() => {\n    if (isOpen) {\n      // Load user's crop data from localStorage\n      const savedCrops = localStorage.getItem('userCrops');\n      if (savedCrops) {\n        setCrops(JSON.parse(savedCrops));\n      } else {\n        // Default crops for demo\n        const defaultCrops = [{\n          id: 1,\n          name: 'Rice',\n          plantingDate: '2024-01-15',\n          expectedHarvest: '2024-04-15',\n          waterRequirement: 'High',\n          fertilizerType: 'NPK 20-20-20',\n          status: 'Growing',\n          health: 'Good',\n          soilData: {\n            N: 80,\n            P: 40,\n            K: 40,\n            temperature: 25,\n            humidity: 80,\n            ph: 6.5,\n            rainfall: 200\n          }\n        }, {\n          id: 2,\n          name: 'Tomato',\n          plantingDate: '2024-02-01',\n          expectedHarvest: '2024-05-01',\n          waterRequirement: 'Medium',\n          fertilizerType: 'Organic Compost',\n          status: 'Flowering',\n          health: 'Excellent',\n          soilData: {\n            N: 60,\n            P: 30,\n            K: 30,\n            temperature: 28,\n            humidity: 60,\n            ph: 6.0,\n            rainfall: 150\n          }\n        }];\n        setCrops(defaultCrops);\n        localStorage.setItem('userCrops', JSON.stringify(defaultCrops));\n      }\n\n      // Generate smart alerts\n      generateSmartAlerts();\n    }\n  }, [isOpen]);\n  const generateSmartAlerts = async () => {\n    const alerts = [];\n\n    // Check each crop for potential issues\n    for (const crop of crops) {\n      if (crop.soilData) {\n        try {\n          // Get ML recommendation for this crop's soil data\n          const response = await fetch('/api/predict', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(crop.soilData)\n          });\n          const data = await response.json();\n          if (data.success) {\n            var _data$prediction$top_;\n            const recommendedCrop = data.prediction.recommended_crop;\n            const confidence = ((_data$prediction$top_ = data.prediction.top_predictions[0]) === null || _data$prediction$top_ === void 0 ? void 0 : _data$prediction$top_.probability) || 0;\n\n            // Check if current crop matches recommendation\n            if (recommendedCrop.toLowerCase() !== crop.name.toLowerCase()) {\n              alerts.push({\n                id: Date.now() + Math.random(),\n                type: 'warning',\n                title: 'Crop Mismatch Alert',\n                message: `Your ${crop.name} may not be suitable for current soil conditions. ML recommends ${recommendedCrop} (${confidence}% confidence).`,\n                date: new Date().toISOString().split('T')[0],\n                priority: confidence > 70 ? 'high' : 'medium'\n              });\n            } else if (confidence < 60) {\n              alerts.push({\n                id: Date.now() + Math.random(),\n                type: 'info',\n                title: 'Low Confidence Alert',\n                message: `Your ${crop.name} has low suitability (${confidence}%). Consider soil improvement.`,\n                date: new Date().toISOString().split('T')[0],\n                priority: 'medium'\n              });\n            }\n          }\n        } catch (error) {\n          console.error('Error generating alert for crop:', crop.name, error);\n        }\n      }\n    }\n\n    // Add general farming alerts\n    alerts.push({\n      id: Date.now() + Math.random(),\n      type: 'info',\n      title: 'Fertilizer Reminder',\n      message: 'Time to check soil nutrients and apply appropriate fertilizers.',\n      date: new Date().toISOString().split('T')[0],\n      priority: 'medium'\n    });\n    setAlerts(alerts);\n  };\n  const addCrop = async () => {\n    if (newCrop.name && newCrop.plantingDate) {\n      // Get ML recommendation for the new crop\n      let soilData = null;\n      let mlRecommendation = null;\n      try {\n        // Use default soil parameters for new crop (user can update later)\n        const defaultSoilData = {\n          N: 60,\n          P: 30,\n          K: 30,\n          temperature: 25,\n          humidity: 60,\n          ph: 6.5,\n          rainfall: 150\n        };\n        const response = await fetch('/api/predict', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(defaultSoilData)\n        });\n        const data = await response.json();\n        if (data.success) {\n          mlRecommendation = data.prediction;\n          soilData = defaultSoilData;\n        }\n      } catch (error) {\n        console.error('Error getting ML recommendation:', error);\n      }\n      const crop = {\n        id: Date.now(),\n        ...newCrop,\n        status: 'Planted',\n        health: 'Good',\n        soilData: soilData,\n        mlRecommendation: mlRecommendation\n      };\n      const updatedCrops = [...crops, crop];\n      setCrops(updatedCrops);\n      localStorage.setItem('userCrops', JSON.stringify(updatedCrops));\n      setNewCrop({\n        name: '',\n        plantingDate: '',\n        expectedHarvest: '',\n        waterRequirement: '',\n        fertilizerType: '',\n        notes: ''\n      });\n\n      // Regenerate alerts with new crop\n      generateSmartAlerts();\n    }\n  };\n  const getAlertIcon = type => {\n    switch (type) {\n      case 'warning':\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"alert-icon warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 30\n        }, this);\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"alert-icon success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 30\n        }, this);\n      case 'info':\n        return /*#__PURE__*/_jsxDEV(TrendingUp, {\n          className: \"alert-icon info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"alert-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getHealthColor = health => {\n    switch (health) {\n      case 'Excellent':\n        return '#4CAF50';\n      case 'Good':\n        return '#8BC34A';\n      case 'Fair':\n        return '#FFC107';\n      case 'Poor':\n        return '#FF5722';\n      default:\n        return '#9E9E9E';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `crop-management-overlay ${isOpen ? 'open' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crop-management-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-title\",\n          children: [/*#__PURE__*/_jsxDEV(Leaf, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Crop Management System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'dashboard' ? 'active' : ''}`,\n          onClick: () => setActiveTab('dashboard'),\n          children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), \"Dashboard\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'crops' ? 'active' : ''}`,\n          onClick: () => setActiveTab('crops'),\n          children: [/*#__PURE__*/_jsxDEV(Leaf, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), \"My Crops\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${activeTab === 'alerts' ? 'active' : ''}`,\n          onClick: () => setActiveTab('alerts'),\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), \"Alerts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-icon\",\n                children: /*#__PURE__*/_jsxDEV(Leaf, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: crops.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Active Crops\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-icon\",\n                children: /*#__PURE__*/_jsxDEV(AlertTriangle, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: alerts.filter(a => a.priority === 'high').length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"High Priority Alerts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-icon\",\n                children: /*#__PURE__*/_jsxDEV(Droplets, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"85%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Water Efficiency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-icon\",\n                children: /*#__PURE__*/_jsxDEV(Sun, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Good\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Weather Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-activity\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-list\",\n              children: alerts.slice(0, 3).map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-item\",\n                children: [getAlertIcon(alert.type), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"activity-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: alert.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"activity-date\",\n                    children: alert.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this)]\n              }, alert.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), activeTab === 'crops' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crops-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-crop-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Add New Crop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Crop Name\",\n                value: newCrop.name,\n                onChange: e => setNewCrop({\n                  ...newCrop,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: newCrop.plantingDate,\n                onChange: e => setNewCrop({\n                  ...newCrop,\n                  plantingDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                placeholder: \"Expected Harvest\",\n                value: newCrop.expectedHarvest,\n                onChange: e => setNewCrop({\n                  ...newCrop,\n                  expectedHarvest: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: newCrop.waterRequirement,\n                onChange: e => setNewCrop({\n                  ...newCrop,\n                  waterRequirement: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Water Requirement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Fertilizer Type\",\n                value: newCrop.fertilizerType,\n                onChange: e => setNewCrop({\n                  ...newCrop,\n                  fertilizerType: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Notes\",\n                value: newCrop.notes,\n                onChange: e => setNewCrop({\n                  ...newCrop,\n                  notes: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-button\",\n              onClick: addCrop,\n              children: \"Add Crop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crops-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"My Crops\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), crops.map(crop => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"crop-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"crop-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: crop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"crop-status\",\n                  style: {\n                    color: getHealthColor(crop.health)\n                  },\n                  children: crop.health\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"crop-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Planted: \", crop.plantingDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(Clock, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Harvest: \", crop.expectedHarvest]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(Droplets, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Water: \", crop.waterRequirement]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"detail-item\",\n                  children: [/*#__PURE__*/_jsxDEV(Zap, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Fertilizer: \", crop.fertilizerType]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), crop.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"crop-notes\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: crop.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this)]\n            }, crop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), activeTab === 'alerts' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alerts-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Farming Alerts & Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alerts-list\",\n            children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert-item ${alert.type}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-icon-container\",\n                children: getAlertIcon(alert.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: alert.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `priority ${alert.priority}`,\n                    children: alert.priority.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: alert.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert-footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"alert-date\",\n                    children: alert.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"mark-read\",\n                    children: \"Mark as Read\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)]\n            }, alert.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(CropManagement, \"Ys9IdFibELIBJIMOX0Z0d4587+k=\", false, function () {\n  return [useLanguage];\n});\n_c = CropManagement;\nexport default CropManagement;\nvar _c;\n$RefreshReg$(_c, \"CropManagement\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Droplets","Sun","AlertTriangle","CheckCircle","TrendingUp","Leaf","Zap","Clock","MapPin","useLanguage","translations","jsxDEV","_jsxDEV","CropManagement","isOpen","onClose","userData","_s","language","t","en","activeTab","setActiveTab","crops","setCrops","alerts","setAlerts","newCrop","setNewCrop","name","plantingDate","expectedHarvest","waterRequirement","fertilizerType","notes","savedCrops","localStorage","getItem","JSON","parse","defaultCrops","id","status","health","soilData","N","P","K","temperature","humidity","ph","rainfall","setItem","stringify","generateSmartAlerts","crop","response","fetch","method","headers","body","data","json","success","_data$prediction$top_","recommendedCrop","prediction","recommended_crop","confidence","top_predictions","probability","toLowerCase","push","Date","now","Math","random","type","title","message","date","toISOString","split","priority","error","console","addCrop","mlRecommendation","defaultSoilData","updatedCrops","getAlertIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getHealthColor","children","size","onClick","length","filter","a","slice","map","alert","placeholder","value","onChange","e","target","style","color","toUpperCase","_c","$RefreshReg$"],"sources":["C:/kisan_Api/frontend/src/components/CropManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Calendar, \r\n  Droplets, \r\n  Sun, \r\n  AlertTriangle, \r\n  CheckCircle, \r\n  TrendingUp,\r\n  Leaf,\r\n  Zap,\r\n  Clock,\r\n  MapPin\r\n} from 'lucide-react';\r\nimport { useLanguage } from '../contexts/LanguageContext';\r\nimport { translations } from '../translations/translations';\r\nimport './CropManagement.css';\r\n\r\nconst CropManagement = ({ isOpen, onClose, userData }) => {\r\n  const { language } = useLanguage();\r\n  const t = translations[language] || translations.en;\r\n  \r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n  const [crops, setCrops] = useState([]);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [newCrop, setNewCrop] = useState({\r\n    name: '',\r\n    plantingDate: '',\r\n    expectedHarvest: '',\r\n    waterRequirement: '',\r\n    fertilizerType: '',\r\n    notes: ''\r\n  });\r\n\r\n  // Load user's crop data and generate smart alerts\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Load user's crop data from localStorage\r\n      const savedCrops = localStorage.getItem('userCrops');\r\n      if (savedCrops) {\r\n        setCrops(JSON.parse(savedCrops));\r\n      } else {\r\n        // Default crops for demo\r\n        const defaultCrops = [\r\n          {\r\n            id: 1,\r\n            name: 'Rice',\r\n            plantingDate: '2024-01-15',\r\n            expectedHarvest: '2024-04-15',\r\n            waterRequirement: 'High',\r\n            fertilizerType: 'NPK 20-20-20',\r\n            status: 'Growing',\r\n            health: 'Good',\r\n            soilData: { N: 80, P: 40, K: 40, temperature: 25, humidity: 80, ph: 6.5, rainfall: 200 }\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Tomato',\r\n            plantingDate: '2024-02-01',\r\n            expectedHarvest: '2024-05-01',\r\n            waterRequirement: 'Medium',\r\n            fertilizerType: 'Organic Compost',\r\n            status: 'Flowering',\r\n            health: 'Excellent',\r\n            soilData: { N: 60, P: 30, K: 30, temperature: 28, humidity: 60, ph: 6.0, rainfall: 150 }\r\n          }\r\n        ];\r\n        setCrops(defaultCrops);\r\n        localStorage.setItem('userCrops', JSON.stringify(defaultCrops));\r\n      }\r\n\r\n      // Generate smart alerts\r\n      generateSmartAlerts();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const generateSmartAlerts = async () => {\r\n    const alerts = [];\r\n    \r\n    // Check each crop for potential issues\r\n    for (const crop of crops) {\r\n      if (crop.soilData) {\r\n        try {\r\n          // Get ML recommendation for this crop's soil data\r\n          const response = await fetch('/api/predict', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(crop.soilData)\r\n          });\r\n          \r\n          const data = await response.json();\r\n          \r\n          if (data.success) {\r\n            const recommendedCrop = data.prediction.recommended_crop;\r\n            const confidence = data.prediction.top_predictions[0]?.probability || 0;\r\n            \r\n            // Check if current crop matches recommendation\r\n            if (recommendedCrop.toLowerCase() !== crop.name.toLowerCase()) {\r\n              alerts.push({\r\n                id: Date.now() + Math.random(),\r\n                type: 'warning',\r\n                title: 'Crop Mismatch Alert',\r\n                message: `Your ${crop.name} may not be suitable for current soil conditions. ML recommends ${recommendedCrop} (${confidence}% confidence).`,\r\n                date: new Date().toISOString().split('T')[0],\r\n                priority: confidence > 70 ? 'high' : 'medium'\r\n              });\r\n            } else if (confidence < 60) {\r\n              alerts.push({\r\n                id: Date.now() + Math.random(),\r\n                type: 'info',\r\n                title: 'Low Confidence Alert',\r\n                message: `Your ${crop.name} has low suitability (${confidence}%). Consider soil improvement.`,\r\n                date: new Date().toISOString().split('T')[0],\r\n                priority: 'medium'\r\n              });\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error generating alert for crop:', crop.name, error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Add general farming alerts\r\n    alerts.push({\r\n      id: Date.now() + Math.random(),\r\n      type: 'info',\r\n      title: 'Fertilizer Reminder',\r\n      message: 'Time to check soil nutrients and apply appropriate fertilizers.',\r\n      date: new Date().toISOString().split('T')[0],\r\n      priority: 'medium'\r\n    });\r\n    \r\n    setAlerts(alerts);\r\n  };\r\n\r\n  const addCrop = async () => {\r\n    if (newCrop.name && newCrop.plantingDate) {\r\n      // Get ML recommendation for the new crop\r\n      let soilData = null;\r\n      let mlRecommendation = null;\r\n      \r\n      try {\r\n        // Use default soil parameters for new crop (user can update later)\r\n        const defaultSoilData = {\r\n          N: 60, P: 30, K: 30, temperature: 25, humidity: 60, ph: 6.5, rainfall: 150\r\n        };\r\n        \r\n        const response = await fetch('/api/predict', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(defaultSoilData)\r\n        });\r\n        \r\n        const data = await response.json();\r\n        if (data.success) {\r\n          mlRecommendation = data.prediction;\r\n          soilData = defaultSoilData;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error getting ML recommendation:', error);\r\n      }\r\n      \r\n      const crop = {\r\n        id: Date.now(),\r\n        ...newCrop,\r\n        status: 'Planted',\r\n        health: 'Good',\r\n        soilData: soilData,\r\n        mlRecommendation: mlRecommendation\r\n      };\r\n      \r\n      const updatedCrops = [...crops, crop];\r\n      setCrops(updatedCrops);\r\n      localStorage.setItem('userCrops', JSON.stringify(updatedCrops));\r\n      \r\n      setNewCrop({\r\n        name: '',\r\n        plantingDate: '',\r\n        expectedHarvest: '',\r\n        waterRequirement: '',\r\n        fertilizerType: '',\r\n        notes: ''\r\n      });\r\n      \r\n      // Regenerate alerts with new crop\r\n      generateSmartAlerts();\r\n    }\r\n  };\r\n\r\n  const getAlertIcon = (type) => {\r\n    switch (type) {\r\n      case 'warning': return <AlertTriangle className=\"alert-icon warning\" />;\r\n      case 'success': return <CheckCircle className=\"alert-icon success\" />;\r\n      case 'info': return <TrendingUp className=\"alert-icon info\" />;\r\n      default: return <Clock className=\"alert-icon\" />;\r\n    }\r\n  };\r\n\r\n  const getHealthColor = (health) => {\r\n    switch (health) {\r\n      case 'Excellent': return '#4CAF50';\r\n      case 'Good': return '#8BC34A';\r\n      case 'Fair': return '#FFC107';\r\n      case 'Poor': return '#FF5722';\r\n      default: return '#9E9E9E';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`crop-management-overlay ${isOpen ? 'open' : ''}`}>\r\n      <div className=\"crop-management-panel\">\r\n        <div className=\"panel-header\">\r\n          <div className=\"panel-title\">\r\n            <Leaf size={24} />\r\n            <h2>Crop Management System</h2>\r\n          </div>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"panel-tabs\">\r\n          <button \r\n            className={`tab ${activeTab === 'dashboard' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('dashboard')}\r\n          >\r\n            <TrendingUp size={16} />\r\n            Dashboard\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'crops' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('crops')}\r\n          >\r\n            <Leaf size={16} />\r\n            My Crops\r\n          </button>\r\n          <button \r\n            className={`tab ${activeTab === 'alerts' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('alerts')}\r\n          >\r\n            <AlertTriangle size={16} />\r\n            Alerts\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"panel-content\">\r\n          {activeTab === 'dashboard' && (\r\n            <div className=\"dashboard\">\r\n              <div className=\"stats-grid\">\r\n                <div className=\"stat-card\">\r\n                  <div className=\"stat-icon\">\r\n                    <Leaf size={24} />\r\n                  </div>\r\n                  <div className=\"stat-info\">\r\n                    <h3>{crops.length}</h3>\r\n                    <p>Active Crops</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <div className=\"stat-icon\">\r\n                    <AlertTriangle size={24} />\r\n                  </div>\r\n                  <div className=\"stat-info\">\r\n                    <h3>{alerts.filter(a => a.priority === 'high').length}</h3>\r\n                    <p>High Priority Alerts</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <div className=\"stat-icon\">\r\n                    <Droplets size={24} />\r\n                  </div>\r\n                  <div className=\"stat-info\">\r\n                    <h3>85%</h3>\r\n                    <p>Water Efficiency</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                  <div className=\"stat-icon\">\r\n                    <Sun size={24} />\r\n                  </div>\r\n                  <div className=\"stat-info\">\r\n                    <h3>Good</h3>\r\n                    <p>Weather Condition</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"recent-activity\">\r\n                <h3>Recent Activity</h3>\r\n                <div className=\"activity-list\">\r\n                  {alerts.slice(0, 3).map(alert => (\r\n                    <div key={alert.id} className=\"activity-item\">\r\n                      {getAlertIcon(alert.type)}\r\n                      <div className=\"activity-content\">\r\n                        <p>{alert.title}</p>\r\n                        <span className=\"activity-date\">{alert.date}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'crops' && (\r\n            <div className=\"crops-section\">\r\n              <div className=\"add-crop-form\">\r\n                <h3>Add New Crop</h3>\r\n                <div className=\"form-grid\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Crop Name\"\r\n                    value={newCrop.name}\r\n                    onChange={(e) => setNewCrop({...newCrop, name: e.target.value})}\r\n                  />\r\n                  <input\r\n                    type=\"date\"\r\n                    value={newCrop.plantingDate}\r\n                    onChange={(e) => setNewCrop({...newCrop, plantingDate: e.target.value})}\r\n                  />\r\n                  <input\r\n                    type=\"date\"\r\n                    placeholder=\"Expected Harvest\"\r\n                    value={newCrop.expectedHarvest}\r\n                    onChange={(e) => setNewCrop({...newCrop, expectedHarvest: e.target.value})}\r\n                  />\r\n                  <select\r\n                    value={newCrop.waterRequirement}\r\n                    onChange={(e) => setNewCrop({...newCrop, waterRequirement: e.target.value})}\r\n                  >\r\n                    <option value=\"\">Water Requirement</option>\r\n                    <option value=\"Low\">Low</option>\r\n                    <option value=\"Medium\">Medium</option>\r\n                    <option value=\"High\">High</option>\r\n                  </select>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Fertilizer Type\"\r\n                    value={newCrop.fertilizerType}\r\n                    onChange={(e) => setNewCrop({...newCrop, fertilizerType: e.target.value})}\r\n                  />\r\n                  <textarea\r\n                    placeholder=\"Notes\"\r\n                    value={newCrop.notes}\r\n                    onChange={(e) => setNewCrop({...newCrop, notes: e.target.value})}\r\n                  />\r\n                </div>\r\n                <button className=\"add-button\" onClick={addCrop}>\r\n                  Add Crop\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"crops-list\">\r\n                <h3>My Crops</h3>\r\n                {crops.map(crop => (\r\n                  <div key={crop.id} className=\"crop-card\">\r\n                    <div className=\"crop-header\">\r\n                      <h4>{crop.name}</h4>\r\n                      <div className=\"crop-status\" style={{color: getHealthColor(crop.health)}}>\r\n                        {crop.health}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"crop-details\">\r\n                      <div className=\"detail-item\">\r\n                        <Calendar size={16} />\r\n                        <span>Planted: {crop.plantingDate}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <Clock size={16} />\r\n                        <span>Harvest: {crop.expectedHarvest}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <Droplets size={16} />\r\n                        <span>Water: {crop.waterRequirement}</span>\r\n                      </div>\r\n                      <div className=\"detail-item\">\r\n                        <Zap size={16} />\r\n                        <span>Fertilizer: {crop.fertilizerType}</span>\r\n                      </div>\r\n                    </div>\r\n                    {crop.notes && (\r\n                      <div className=\"crop-notes\">\r\n                        <p>{crop.notes}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'alerts' && (\r\n            <div className=\"alerts-section\">\r\n              <h3>Farming Alerts & Notifications</h3>\r\n              <div className=\"alerts-list\">\r\n                {alerts.map(alert => (\r\n                  <div key={alert.id} className={`alert-item ${alert.type}`}>\r\n                    <div className=\"alert-icon-container\">\r\n                      {getAlertIcon(alert.type)}\r\n                    </div>\r\n                    <div className=\"alert-content\">\r\n                      <div className=\"alert-header\">\r\n                        <h4>{alert.title}</h4>\r\n                        <span className={`priority ${alert.priority}`}>\r\n                          {alert.priority.toUpperCase()}\r\n                        </span>\r\n                      </div>\r\n                      <p>{alert.message}</p>\r\n                      <div className=\"alert-footer\">\r\n                        <span className=\"alert-date\">{alert.date}</span>\r\n                        <button className=\"mark-read\">Mark as Read</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}