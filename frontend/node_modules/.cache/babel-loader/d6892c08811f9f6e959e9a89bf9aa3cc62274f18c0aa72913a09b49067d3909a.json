{"ast":null,"code":"var _jsxFileName = \"C:\\\\kisan_Api\\\\frontend\\\\src\\\\contexts\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState('en');\n  const changeLanguage = lang => {\n    setLanguage(lang);\n    localStorage.setItem('selectedLanguage', lang);\n  };\n\n  // Load saved language on mount\n  React.useEffect(() => {\n    const savedLanguage = localStorage.getItem('selectedLanguage');\n    if (savedLanguage) {\n      setLanguage(savedLanguage);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      changeLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"W8orfgzKvvs5hVi8Wxnq8KXupyo=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","language","setLanguage","changeLanguage","lang","localStorage","setItem","useEffect","savedLanguage","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/kisan_Api/frontend/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  const changeLanguage = (lang) => {\r\n    setLanguage(lang);\r\n    localStorage.setItem('selectedLanguage', lang);\r\n  };\r\n\r\n  // Load saved language on mount\r\n  React.useEffect(() => {\r\n    const savedLanguage = localStorage.getItem('selectedLanguage');\r\n    if (savedLanguage) {\r\n      setLanguage(savedLanguage);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGP,UAAU,CAACI,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMa,cAAc,GAAIC,IAAI,IAAK;IAC/BF,WAAW,CAACE,IAAI,CAAC;IACjBC,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEF,IAAI,CAAC;EAChD,CAAC;;EAED;EACAjB,KAAK,CAACoB,SAAS,CAAC,MAAM;IACpB,MAAMC,aAAa,GAAGH,YAAY,CAACI,OAAO,CAAC,kBAAkB,CAAC;IAC9D,IAAID,aAAa,EAAE;MACjBN,WAAW,CAACM,aAAa,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACC,eAAe,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEV,QAAQ;MAAEE;IAAe,CAAE;IAAAJ,QAAA,EAC3DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACf,GAAA,CArBWF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}