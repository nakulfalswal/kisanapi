{"ast":null,"code":"var _jsxFileName = \"C:\\\\kisan_Api\\\\frontend\\\\src\\\\components\\\\CropManagementButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Settings, X } from 'lucide-react';\nimport CropManagement from './CropManagement';\nimport './CropManagementButton.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CropManagementButton = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const togglePanel = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"crop-management-button\",\n      onClick: togglePanel,\n      title: \"Crop Management System\",\n      children: [/*#__PURE__*/_jsxDEV(Settings, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Crop Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CropManagement, {\n      isOpen: isOpen,\n      onClose: () => setIsOpen(false),\n      userData: null // You can pass user data here\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CropManagementButton, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = CropManagementButton;\nexport default CropManagementButton;\nvar _c;\n$RefreshReg$(_c, \"CropManagementButton\");","map":{"version":3,"names":["React","useState","Settings","X","CropManagement","jsxDEV","_jsxDEV","Fragment","_Fragment","CropManagementButton","_s","isOpen","setIsOpen","togglePanel","children","className","onClick","title","size","fileName","_jsxFileName","lineNumber","columnNumber","onClose","userData","_c","$RefreshReg$"],"sources":["C:/kisan_Api/frontend/src/components/CropManagementButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Settings, X } from 'lucide-react';\r\nimport CropManagement from './CropManagement';\r\nimport './CropManagementButton.css';\r\n\r\nconst CropManagementButton = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const togglePanel = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button \r\n        className=\"crop-management-button\"\r\n        onClick={togglePanel}\r\n        title=\"Crop Management System\"\r\n      >\r\n        <Settings size={20} />\r\n        <span>Crop Management</span>\r\n      </button>\r\n\r\n      <CropManagement \r\n        isOpen={isOpen} \r\n        onClose={() => setIsOpen(false)}\r\n        userData={null} // You can pass user data here\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CropManagementButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,CAAC,QAAQ,cAAc;AAC1C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MACES,SAAS,EAAC,wBAAwB;MAClCC,OAAO,EAAEH,WAAY;MACrBI,KAAK,EAAC,wBAAwB;MAAAH,QAAA,gBAE9BR,OAAA,CAACJ,QAAQ;QAACgB,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtBhB,OAAA;QAAAQ,QAAA,EAAM;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAEThB,OAAA,CAACF,cAAc;MACbO,MAAM,EAAEA,MAAO;MACfY,OAAO,EAAEA,CAAA,KAAMX,SAAS,CAAC,KAAK,CAAE;MAChCY,QAAQ,EAAE,IAAK,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACZ,EAAA,CAzBID,oBAAoB;AAAAgB,EAAA,GAApBhB,oBAAoB;AA2B1B,eAAeA,oBAAoB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}